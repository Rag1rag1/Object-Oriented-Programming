#include <iostream>
//iostream 헤더 파일을 포함시킨다. input and output operations in c++
using namespace std;
// namespace std를 사용한다고 선언. 표준 c++ 라이브러리 함수와 객체

int main()
{
    int arr[2][3] = { {11,12,13},{21,22,23} };//정수 2차원 배열 선언
    int(*parr)[3]; //3개의 포인터를 담는 포인터배열 parr 선언
    int* p; // 포인터 p선언
    int** pt;//이중포인터 pt선언

    parr = arr; //parr[0]에 arr의 시작 주솟값을 대입.
    cout << parr <<" " << arr << "\n";//parr의 값과 arr의 시작 주솟값을 출력(같음)
    cout << parr + 1 << " " << arr + 1 << "\n"; //parr[1]의 값과 arr[1]의 주솟값을 출력한다(같음)
    cout << *(parr + 1) << " " << parr[1] << " " << *(arr + 1) << " " << arr[1] << "\n";//*(parr+1)=parr[1]의 값을 출력== *(arr+1)은 이차원배열 arr의 첫번째 행 arr[1]의 시작 주솟값이 출력
    cout << **(parr + 1) << " " << **(arr + 1) << " " << *arr[1] << " " << arr[1][0] << "\n";//parr[1]의 값에 해당하는 주소로 이동해 그 안의 값을 출력 ==arr의 첫번째 행의 시작주소에 들어있는 값을 출력.
    
    p = arr[0]; //포인터 p에 일차원 배열 arr[0]의 시작 주솟값을 대입
    cout << p << " " << arr[0] << " " << *arr << "\n";//p의 값과 arr[0]의 시작 주솟값 출력.(같음)
    cout << *(p + 1) << " " << *(arr[0] + 1) << " " << *(*arr + 1) << "\n";//p에서 4바이트 떨어진 곳(+1)의 값에 해당하는 주소로 이동해 그 안의 값을 출력. arr[0]에서 4바이트 떨어진 곳(+1)에 포함하는 값(*)을 출력. 
    //arr =이차원배열의 시작 주솟값. 
    //*arr=일차원배열 arr[0]의 시작 주솟값,
    //*arr +1 = 일차원 배열 arr[0]에서 4바이트 떨어진 곳의 주솟값,
    //*(*arr +1)=일차원 배열 arr[0]에서 4바이트 떨어진 곳의 값,

    pt = &p;//이중포인터 pt의 값에 포인터 p의 주솟값을 대입
    cout << *pt << " " << p << "\n";//이중포인터 pt의 값에 해당하는 주소로 이동해 그 안의 값을 출력 ==p의 값
    cout << **pt << " " << *p << "\n";//이중포인터 pt의 값에 해당하는 주소로 이동해 그 안의 값에 해당하는 주소로 이동해 그 안의 값을 출력.
    return 0;
}